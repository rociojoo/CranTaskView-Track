* using log directory ‘/tmp/Rtmpr5qHpr/ukfsst.Rcheck’
* using R version 3.6.1 (2019-07-05)
* using platform: x86_64-pc-linux-gnu (64-bit)
* using session charset: UTF-8
* using options ‘--no-manual --as-cran’
* checking for file ‘ukfsst/DESCRIPTION’ ... OK
* this is package ‘ukfsst’ version ‘0.3’
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking serialization versions ... OK
* checking whether package ‘ukfsst’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... NOTE
Deprecated license: BSD
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... NOTE
'library' or 'require' calls to packages already attached by Depends:
  ‘date’ ‘kftrack’ ‘ncdf4’
  Please remove these calls from your code.
Package in Depends field not imported from: ‘ncdf4’
  These packages need to be imported from (in the NAMESPACE file)
  for when this namespace is loaded but not attached.
* checking S3 generic/method consistency ... NOTE
Found the following apparent S3 methods exported but not registered:
  plot.kfsst print.kfsst
See section ‘Registering S3 methods’ in the ‘Writing R Extensions’
manual.
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
NB: .First.lib is obsolete and will not be used in R >= 3.0.0
File ‘ukfsst/R/ukfsst-internal.R’:
  .First.lib calls:
    library(kftrack)
    library(date)
    cat("\n\n")
    cat(paste(rep("=", options()$width), collapse = ""), "\n\n")
    cat("Welcome to UKFSST - A package for improving tracking of tagged\n")
    cat("sea creatures by including Sea Surface Temperature (SST)\n")
    cat("in the Unscented Kalman Filter (UKF) based reconstruction model. \n\n")
    cat("What you typically want to do is the following sequence:\n\n")
    cat("1) Read in a track(\n")
    cat("2) Obtain a corresponding SST-field\n")
    cat("3) Reconstruct the track\n")
    cat("4) Investigate the fitted track by plots and summaries\n\n")
    cat("A slightly more detailed description of these four steps\n")
    cat("including what functions may be useful and how to call them is\n")
    cat("available via the function 'road.map'. If needed simply type: \n\n")
    cat("   road.map()\n\n")
    cat("and the text will be displayed.\n\n")
    cat("Check also the complete example in the 'blue.shark' dataset\n")
    cat("documentation by typing:\n\n")
    cat("  example(blue.shark)\n\n")
    cat("Thank you for your efforts in downloading and trying this\n")
    cat("software. If you encounter any bugs or have any questions -\n")
    cat("please don't hesitate to contact me:\n\n")
    cat("Anders Nielsen <anders.nielsen@hawaii.edu>\n\n")
    cat(paste(rep("=", options()$width), collapse = ""), "\n\n")
    cat("WINDOWS USERS: Please press (Ctrl+W) or use the menu \n")
    cat("(Misc->Buffered output) to switch the delayed output off.\n\n")
    cat(paste(rep("=", options()$width), collapse = ""), "\n\n")

Package startup functions should not change the search path.
Package startup functions should use ‘packageStartupMessage’ to
  generate messages.
See section ‘Good practice’ in '?.onAttach'.

.CI.reg: no visible global function definition for ‘par’
.CI.reg: no visible global function definition for ‘qchisq’
.CI.reg: no visible global function definition for ‘polygon’
.generate.dat.file.kfsst: no visible global function definition for
  ‘write.table’
.generate.dat.file.kfsst: no visible binding for global variable
  ‘.sstFileVector’
.myflush: no visible global function definition for ‘flush.console’
.myflush: no visible global function definition for ‘par’
.plot1: no visible global function definition for ‘plot’
.plot1: no visible global function definition for ‘gray’
.plot1: no visible global function definition for ‘lines’
.plot2: no visible global function definition for ‘plot’
.plot2: no visible global function definition for ‘gray’
.plot2: no visible global function definition for ‘lines’
.plot3 : gmt: no visible binding for '<<-' assignment to ‘cmd’
.plot3 : gmt: no visible global function definition for ‘.kfsys’
.plot3 : gmt: no visible binding for global variable ‘cmd’
.plot3: no visible global function definition for ‘plot’
.plot3: no visible global function definition for ‘.gmtok’
.plot3: no visible global function definition for ‘par’
.plot3: no visible global function definition for ‘rect’
.plot3: no visible global function definition for ‘polygon’
.plot3: no visible global function definition for ‘gray’
.plot3: no visible global function definition for ‘lines’
.plotsst: no visible global function definition for ‘plot’
.plotsst: no visible global function definition for ‘gray’
.plotsst: no visible global function definition for ‘lines’
.read.output.kfsst: no visible global function definition for
  ‘read.table’
get.avhrr.sst: no visible global function definition for
  ‘download.file’
get.avhrr.sst: no visible global function definition for ‘write.table’
get.avhrr.sst: no visible global function definition for
  ‘complete.cases’
get.avhrr.sst: no visible binding for '<<-' assignment to
  ‘.sstFileVector’
get.sst.from.server: no visible global function definition for
  ‘download.file’
get.sst.from.server: no visible global function definition for
  ‘nc_open’
get.sst.from.server: no visible global function definition for
  ‘ncvar_get’
get.sst.from.server: no visible global function definition for
  ‘nc_close’
get.sst.from.server: no visible global function definition for
  ‘ncvar_def’
get.sst.from.server: no visible global function definition for
  ‘ncvar_add’
get.sst.from.server: no visible global function definition for
  ‘ncvar_put’
get.sst.from.server: no visible global function definition for
  ‘nc_sync’
get.sst.from.server: no visible global function definition for
  ‘na.omit’
get.sst.from.server: no visible global function definition for
  ‘write.table’
get.sst.from.server: no visible binding for '<<-' assignment to
  ‘.sstFileVector’
kfsst: no visible binding for '<<-' assignment to ‘.sstFileVector’
plot.kfsst: no visible global function definition for ‘par’
plot.kfsst: no visible global function definition for ‘layout’
plot.kfsst: no visible global function definition for ‘axis’
plot.kfsst: no visible global function definition for ‘box’
plot.kfsst: no visible global function definition for ‘mtext’
plot.kfsst: no visible global function definition for ‘title’
plot.kfsst: no visible global function definition for ‘.gmt.plot’
plotmap: no visible global function definition for ‘plot’
plotmap: no visible global function definition for ‘rect’
plotmap: no visible global function definition for ‘axis’
plotmap: no visible global function definition for ‘polygon’
plotmap: no visible global function definition for ‘locator’
Undefined global functions or variables:
  .gmt.plot .gmtok .kfsys .sstFileVector axis box cmd complete.cases
  download.file flush.console gray layout lines locator mtext na.omit
  nc_close nc_open nc_sync ncvar_add ncvar_def ncvar_get ncvar_put par
  plot polygon qchisq read.table rect title write.table
Consider adding
  importFrom("grDevices", "gray")
  importFrom("graphics", "axis", "box", "layout", "lines", "locator",
             "mtext", "par", "plot", "polygon", "rect", "title")
  importFrom("stats", "complete.cases", "na.omit", "qchisq")
  importFrom("utils", "download.file", "flush.console", "read.table",
             "write.table")
to your NAMESPACE file.
* checking Rd files ... NOTE
prepare_Rd: get.avhrr.sst.Rd:29-30: Dropping empty section \details
prepare_Rd: get.blended.sst.Rd:24-25: Dropping empty section \details
* checking Rd metadata ... OK
* checking Rd line widths ... NOTE
Rd file 'get.avhrr.sst.Rd':
  \usage lines wider than 90 characters:
                    server = "http://coastwatch.pfeg.noaa.gov/coastwatch/CWBrowserWW360.jsp?get=gridData&dataSet=",

Rd file 'get.blended.sst.Rd':
  \usage lines wider than 90 characters:
       server = "http://coastwatch.pfeg.noaa.gov/coastwatch/CWBrowserWW360.jsp?get=gridData&dataSet=", 

These lines will be truncated in the PDF manual.
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... WARNING
Codoc mismatches from documentation object 'get.sst.from.server':
get.sst.from.server
  Code: function(track, folder = tempdir(), removeland = TRUE)
  Docs: function(track, folder = tempdir(), removeland = TRUE, save =
                 F)
  Argument names in docs not in code:
    save

* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'get.sst.from.server'
  ‘removeland’ ‘save’

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
S3 methods shown with full name in documentation object 'plot.kfsst':
  ‘plot.kfsst’

S3 methods shown with full name in documentation object 'print.kfsst':
  ‘print.kfsst’

The \usage entries for S3 methods should use the \method markup and not
their full name.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking line endings in Makefiles ... OK
* checking for GNU extensions in Makefiles ... OK
* checking include directives in Makefiles ... OK
* checking examples ... ERROR
Running examples in ‘ukfsst-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: blue.shark
> ### Title: A track of a blue shark released near Hawai'i
> ### Aliases: blue.shark
> ### Keywords: datasets
> 
> ### ** Examples
> 
>   data(blue.shark)
>   sst.path<-get.reynolds(blue.shark)
Error in get.reynolds(blue.shark) : 
  could not find function "get.reynolds"
Execution halted
* DONE
Status: 1 ERROR, 2 WARNINGs, 6 NOTEs
